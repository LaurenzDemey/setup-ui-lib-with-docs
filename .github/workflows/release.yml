# This github action flow is used for releasing a new official version.
# In this flow we release the version of the packages and the docs (docs as version & default)

on:
  workflow_dispatch:

jobs:
  build_and_deploy:
    concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.
    runs-on: ubuntu-latest
    steps:
      # Get the code
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 #needed for retrieving all tags

      # Setup node
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20.10.x
          cache: npm

      # Install npm packages
      - name: Install
        run: npm ci

      # build all buildable parts
      - name: Build doc application
        run: npm run nx run-many -- -t build

      # get next-version
      - name: get the new version and add to output
        id: next-v
        run: node tools/next-version.js

      # remove temporarily folder
      - name: remove temporarily folder
        run: npx rimraf dist/latest-and-specific-version

      # Copy files to right structure as latest
      - name: Copy dist folder as latest
        run: |
          mkdir dist/latest-and-specific-version
          if [ "${{ runner.os }}" = "Windows" ]; then            
            xcopy /E /I dist/apps/docs/browser dist/latest-and-specific-version
          else
            cp -r dist/apps/docs/browser/* dist/latest-and-specific-version
          fi

      # replace <base href="/"> => <base href="/setup-ui-lib-with-docs/">
      - name: Replace base href for latest
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: '<base href="/">'
          replace: '<base href="/setup-ui-lib-with-docs/">'
          include: 'dist/latest-and-specific-version/index.html'

      # Copy files to right structure as specific version
      - name: Copy dist folder as specific folder
        if: ("${{steps.next-v.outputs.next-version}}" != "null")
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
              xcopy /E /I dist/apps/docs/browser dist/latest-and-specific-version/${{steps.next-v.outputs.next-version}}
          else
            cp -r dist/apps/docs/browser/* dist/latest-and-specific-version/${{steps.next-v.outputs.next-version}}
          fi

      # replace <base href="/"> => <base href="/setup-ui-lib-with-docs/{version}">
      - name: Replace base href for specific version
        uses: jacobtomlinson/gha-find-replace@v3
        if: ("${{steps.next-v.outputs.next-version}}" != "null")
        with:
          find: '<base href="/">'
          replace: '<base href="/setup-ui-lib-with-docs/${{steps.next-v.outputs.next-version}}">'
          include: 'dist/latest-and-specific-version/${{steps.next-v.outputs.next-version}}/index.html'

      # release as official doc
      - name: Deploy docs as latest/official version
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist/latest-and-specific-version
          clean: true
          clean-exclude: |
            vNext
            versions

      # Mark versions + mark release to github (still dry-run)
      - name: configure version number + add github release + add changelog + deploy packages
        if: ("${{steps.next-v.outputs.next-version}}" != "null")
        run: node tools/release.js
