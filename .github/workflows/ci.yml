# This github action flow is used for releasing a new vNext version before an official release is done.
# In this flow we update the docs, but we could also release an alpha version of the packages (if needed - depends on cleanup on nexus registry)
# Currently we don't do that. Code is put in comments however at the bottom.

on:
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      # Get the code
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 #needed for retrieving all tags

      # Setup node
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20.10.x
          cache: npm

      # Install npm packages
      - name: Install
        run: npm ci

      # build documentation for vNext
      - name: Build doc application
        run: npm run nx build docs

      # replace <base href="/"> => <base href="/setup-ui-lib-with-docs/vNext/">
      # This is faster, so that the build command can be cached. If we specify another base href each time, then it will rerun the whole build
      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: '<base href="/">'
          replace: '<base href="/setup-ui-lib-with-docs/vNext/">'
          include: 'dist/apps/docs/browser/index.html'

      # release to vNext
      - name: Deploy docs as VNext
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist/apps/docs/browser
          clean: true
          target-folder: vNext

      # Steps for releasing packages to alpha version:

      # # retrieve current latest tag
      # - name: Get latest Git Tag
      #   id: get-latest-tag
      #   run: echo "::set-output name=latest-tag::$(git describe --tags --abbrev=0)"

      # # Get how many commits are after the latest tag
      # - name: Get number of commits after last tag
      #   id: commits-after-tag
      #   run: echo "::set-output name=commits-after-tag::$(git rev-list ${{steps.get-latest-tag.outputs.latest-tag}}..HEAD --count)

      # # TODO: extract the v from the latest tag

      # # Release alpha packages (numbering: latestTag-numberOfCommits. for example: 1.2.0-alpha-5)
      # - name: deploy alpha packages
      #   run: node tools/release-alpha.js --version=${{steps.get-latest-tag.outputs.latest-tag}}-alpha-${{steps.commits-after-tag.outputs.commits-after-tag}}
